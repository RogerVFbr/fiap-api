name: 'Deploy'

on:
  pull_request:
    branches: [ "main", "develop" ]
    types: [closed]

jobs:
  terraform:
    name: 'Deploy Infra & App'
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      APPLICATON_NAME: fiap-api
      MODELS_BUCKET_NAME: fiap-ml-models-monorepo-bucket
      DOCKER_API_VERSION: 1.25

    defaults:
      run:
        shell: bash
        working-directory: ./infra

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Echo Versions
      run: | 
        docker --version
        python --version
        aws --version

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Install Docker Slim
      run: |
        wget https://downloads.dockerslim.com/releases/1.40.1/dist_linux.tar.gz
        tar -xvf dist_linux.tar.gz
        sudo mv dist_linux/* /usr/local/bin

    - name: Install Docker Slim
      run: |
        sudo apt update
        sudo apt install curl
        curl --version
        curl -sL https://raw.githubusercontent.com/slimtoolkit/slim/master/scripts/install-slim.sh | sudo -E bash -
        slim --version

    - name: Terraform Init
      run: terraform init -backend-config="key=$APPLICATON_NAME-${{ steps.extract_branch.outputs.branch }}.tfstate"

    - name: Terraform Plan
      run: terraform plan -var 'environment=${{ steps.extract_branch.outputs.branch }}' -var "bucket_name=$MODELS_BUCKET_NAME" -input=false

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false -var 'environment=${{ steps.extract_branch.outputs.branch }}' -var "bucket_name=$MODELS_BUCKET_NAME"

    - name: Create Pull Request to Main
      if: steps.extract_branch.outputs.branch == 'develop'
      uses: repo-sync/pull-request@v2
      with:
        destination_branch: main